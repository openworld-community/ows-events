version: '3.7'

x-logging: &default-logging
    driver: json-file
    options:
        max-size: '10m'
        max-file: '5'

networks:
    build_ows_events:

services:
    frontend:
        build:
            context: .
            dockerfile: ./frontend/Dockerfile
            args:
                - NODE_ENV=production
                - VITE_MODE=production
        logging: *default-logging
        restart: always
        networks:
            - build_ows_events
        ports:
            - '80:3000'
        environment:
            - NUXT_PUBLIC_API_URL=http://localhost:7080/api
            - NUXT_PUBLIC_BASE_URL=http://localhost:7080
            - NUXT_PUBLIC_TELEGRAM_AUTH_BOT_NAME=afisha_oauth_local_bot
            - NUXT_PUBLIC_DOMAIN=localhost
            - NUXT_PUBLIC_GTAG_ID=localhostGtagId
            - NUXT_PUBLIC_GOOGLE_SIGN_IN_CLIENT_ID

    backend:
        build:
            context: .
            dockerfile: ./backend/Dockerfile
        logging: *default-logging
        restart: always
        depends_on:
            - mongo
        links:
            - mongo
        environment:
            - MODE=prod
            - MONGO_URI=mongodb://mongo:27017/dev
            - FRONTEND_URL=http://127.0.0.1
            - SECRET_KEY
        networks:
            - build_ows_events
        ports:
            - '7080:7080'
        volumes:
            - /root/ows-events/assets/img:/app/assets/img

    mongo:
        image: mongo:6.0
        restart: unless-stopped
        command: ['--bind_ip_all']
        ports:
            - '27020:27017'
        networks:
            - build_ows_events
        healthcheck:
            test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
            interval: 10s
            start_period: 30s
        volumes:
            - /root/db/prod:/data/db
